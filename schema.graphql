enum JobState {
  DealNegotiating #DealStateChange DealNegotiating
  DealAgreed #DealStateChange DealAgreed
  ResultsSubmitted #DealStateChange ResultsSubmitted
  ResultsChecked #DealStateChange ResultsChecked
  ResultsAccepted #DealStateChange ResultsAccepted
  MediationAccepted #DealStateChange MediationAccepted
  MediationRejected #DealStateChange MediationRejected
  TimeoutAgree #DealStateChange TimeoutAgree
  TimeoutSubmitResults #DealStateChange TimeoutSubmitResults
  TimeoutJudgeResults #DealStateChange TimeoutJudgeResults
  TimeoutMediateResults #DealStateChange TimeoutMediateResults
}

type Job @entity {
  id: Bytes! # keccak256 hash on the dealId
  dealId: String!
  createdAtTimestamp: BigInt!
  lastModifiedTimestamp: BigInt!
  durationSeconds: BigInt!
  state: JobState!
  history: [JobHistory!]! @derivedFrom(field: "job")
}

type JobHistory @entity {
  id: ID! #transaction.hash
  job: Job! @link # This creates a many-to-one relationship to Job
  timestamp: BigInt!
  payee: Bytes # address
  amount: BigInt # uint256
  reason: Int # uint8
  direction: Int # uint8
  state: JobState!
}
